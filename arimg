#!/bin/bash

set -o errexit -o pipefail -o noclobber -o nounset

! getopt --test > /dev/null
if [[ ${PIPESTATUS[0]} -ne 4 ]]; then
    echo 'Iâ€™m sorry, `getopt --test` failed in this environment.'
    exit 1
fi

OPTIONS=i:u:k:r:o:apch
LONGOPTS=ip:,user:,key:,reversekey:,output:,ansible,puppet,chef,help

! PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@")
if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
    exit 2
fi
eval set -- "$PARSED"

ip=n
user=n
key=n
reversekey=n
ansible=n
puppet=n
chef=n
output=-
while true; do
    case "$1" in
        -h|--help)
            echo "
usage: arimg [-apc] [-i|--ip 127.0.0.2]
                    [-u|--user spinup] [-k|--key .ssh/id_rsa]
                    [-r|--reversekey .ssh/reversekey_rsa]
                    [-o|--output deploy.img] input"
            exit 1
            ;;
        -i|--ip)
            ip="$2"
            shift 2
            ;;
        -u|--user)
            user="$2"
            shift 2
            ;;
        -k|--key)
            key="$2"
            shift 2
            ;;
        -r|--reversekey)
            reversekey="$2"
            shift 2
            ;;
        -a|--ansible)
            ansible=y
            shift
            ;;
        -p|--puppet)
            puppet=y
            shift
            ;;
        -c|--chef)
            chef=y
            shift
            ;;
        -o|--output)
            output="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Programming error"
            exit 3
            ;;
    esac
done

if test "$#" -ne 1; then
  echo "
usage: arimg [-apc] [-i|--ip 127.0.0.2]
          [-u|--user spinup] [-k|--key .ssh/id_rsa]
          [-r|--reversekey .ssh/reversekey_rsa]
          [-o|--output deploy.img] input"
    exit
fi




echo " IP: $ip, User: $user, RSA Key: $key, Signal Key: $reversekey, Ansible: $ansible, Puppet: $puppet, Chef: $chef, Out: $output"
